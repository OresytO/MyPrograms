-- ----------------------------------------------------------------------------------------
-- gregslist.sql
--
-- See gregslist.doc.
-- ----------------------------------------------------------------------------------------



CREATE TABLE t_gregslist
(
	id				INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
	last_name	VARCHAR(32),
	first_name	VARCHAR(32),
	email			VARCHAR(64),
	gender		CHAR(1),
	birthday		DATE,
	profession	VARCHAR(64),
	location		VARCHAR(64),
	zipcode		VARCHAR(5),
	status		VARCHAR(32),
	interests	VARCHAR(128),
	seeking		VARCHAR(64),
	prof_id		INTEGER,
	zipcode_id	INTEGER,
	status_id	INTEGER
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- As soon as we create some of the other tables, we'll go in and drop zipcode, status, interests, profession and seeking.

-- We'll create the big table with all the fields, then move some of these fields out
-- into the other tables...
INSERT INTO t_gregslist ( last_name, first_name, email, gender, birthday, profession, location, zipcode, status, interests, seeking )
	VALUES ('Anderson','Jillian','jill_anderson@breakneckpizza.com','F','1980-09-05','Technical Writer','Palo Alto, CA','94304','single','kayaking, reptiles','relationship, friends');
INSERT INTO t_gregslist ( last_name, first_name, email, gender, birthday, profession, location, zipcode, status, interests, seeking )
	VALUES ('Kenton','Leo','lkenton@starbuzzcoffee.com','M','1974-01-10','Manager','San Francisco, CA','94118','divorced','women','women to date');
INSERT INTO t_gregslist ( last_name, first_name, email, gender, birthday, profession, location, zipcode, status, interests, seeking )
	VALUES ('McGavin','Darrin', 'captainlove@headfirsttheater.com','M','1966-01-23','Cruise Ship Captain','San Diego, CA','92103','single','sailing, fishing, yachting','women for casual relationships');
INSERT INTO t_gregslist ( last_name, first_name, email, gender, birthday, profession, location, zipcode, status, interests, seeking )
	VALUES ('Franklin','Joe','joe_franklin@leapinlimos.com','M','1977-04-28','Software Sales','Dallas, TX','75204','married','fishing, drinking','new job');
INSERT INTO t_gregslist ( last_name, first_name, email, gender, birthday, profession, location, zipcode, status, interests, seeking )
	VALUES ('Hamilton','Jamie','dontbother@starbuzzcoffee.com','F','1964-09-10','System Administrator','Princeton, NJ','08540','married','RPG','nothing');
INSERT INTO t_gregslist ( last_name, first_name, email, gender, birthday, profession, location, zipcode, status, interests, seeking )
	VALUES ('Chevrolet','Maurice','bookman4u@objectville.net','M','1962-07-01','Bookshop Owner','Mountain View, CA','94041','married','collecting books, scuba diving','friends');
INSERT INTO t_gregslist ( last_name, first_name, email, gender, birthday, profession, location, zipcode, status, interests, seeking )
	VALUES ('Kroger','Renee','poorrenee@mightygumball.net','F','1976-12-03','Unemployed','San Francisco, CA','94118','divorced','cooking','employment');
INSERT INTO t_gregslist ( last_name, first_name, email, gender, birthday, profession, location, zipcode, status, interests, seeking )
	VALUES ('Mendoza','Angelina','angelina@starbuzzcoffee.com','F','1979-08-19','UNIX Sysadmin','San Francisco, CA','94118','married','acting, dancing','new job');
INSERT INTO t_gregslist ( last_name, first_name, email, gender, birthday, profession, location, zipcode, status, interests, seeking )
	VALUES ('Murphy','Donald','padraic@tikibeanlounge.com','M','1967-01-23','Computer Programmer','New York City, NY','10007', 'committed relationship','RPG, anime','friends');
INSERT INTO t_gregslist ( last_name, first_name, email, gender, birthday, profession, location, zipcode, status, interests, seeking )
	VALUES ('Spatner','John','jpoet@objectville.net','M','1963-04-18','Salesman','Woodstock, NY','12498','married','poetry, screenwriting','nothing');
INSERT INTO t_gregslist ( last_name, first_name, email, gender, birthday, profession, location, zipcode )
	VALUES ('Toth','Anne','Anne_Toth@leapinlimos.com','F','1969-11-18', 'Artist','San Francisco, CA','94118');
INSERT INTO t_gregslist ( last_name, first_name, email, gender, birthday, profession, location, zipcode )
	VALUES ('Manson','Anne','am86@objectville.net','F','1977-08-09', 'Baker','Seattle, WA', '98102');
INSERT INTO t_gregslist ( last_name, first_name, email, gender, birthday, profession, location, zipcode )
	VALUES ('Hardy','Anne','anneh@b0tt0msup.com','F','1963-04-18', 'Teacher','San Francisco, CA','94118');
INSERT INTO t_gregslist ( last_name, first_name, email, gender, birthday, profession, location, zipcode )
	VALUES ('Parker','Anne','annep@starbuzzcoffee.com','F','1983-01-10', 'Student','San Francisco, CA','94118');
INSERT INTO t_gregslist ( last_name, first_name, email, gender, birthday, profession, location, zipcode )
	VALUES ('Blunt','Anne','anneblunt@breakneckpizza.com','F','1959-10-09', 'Web Designer','San Francisco, CA','94118');
INSERT INTO t_gregslist ( last_name, first_name, email, gender, birthday, profession, location, zipcode )
	VALUES ('Jacobs','Anne','anne99@objectville.net','F','1968-02-05', 'Computer Programmer','San Jose, CA', '95118');
INSERT INTO t_gregslist ( last_name, first_name, email, gender,  birthday, profession, location, zipcode, status, interests, seeking )
	VALUES ( 'Everett', 'Joan', 'jeverett@mightygumball.net', 'F', '1978-04-03', 'Artist', 'Salt Lake City UT', '84111', 'single', 'sailing, hiking, cooking', 'single man' );
INSERT INTO t_gregslist ( last_name, first_name, email, gender,  birthday, profession, location, zipcode, status, interests, seeking )
	VALUES ( 'Singh', 'Paul', 'ps@tikibeanlounge.com', 'M', '1980-12-10', 'Professor', 'New York, NY', '10007', 'single', 'dogs, spelunking', 'single woman' );
INSERT INTO t_gregslist ( last_name, first_name, email, gender,  birthday, profession, location, zipcode, status, interests, seeking )
	VALUES ( 'Baldwin', 'Tara', 'tara@breakneckpizza.com', 'F', '1970-09-01', 'Chef', 'Boston, MA', '02111', 'single', 'movies, reading, cooking', 'single man' );

SELECT id, last_name, first_name, gender, birthday, profession, location, zipcode, status, interests, seeking, prof_id, zipcode_id, status_id FROM t_gregslist;

-- This is included by gregslist.sql
SELECT "Create profession..." AS "COMMENT";
CREATE TABLE t_profession
(
	id				INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
	profession	VARCHAR(64)
) AS
	SELECT profession FROM t_gregslist
	GROUP BY profession
	ORDER BY profession;
SELECT * FROM t_profession;

-- This is included by gregslist.sql
SELECT "Create zipcode" AS "COMMENT";
CREATE TABLE t_zipcode
(
	id			INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
	zipcode	VARCHAR(5)
) AS
	SELECT zipcode FROM t_gregslist
	GROUP BY zipcode
	ORDER BY zipcode;
SELECT * FROM t_zipcode;

-- Now link the rows in gregslist to those of this table:


-- This is included by gregslist.sql
SELECT "Create status" AS "COMMENT";
CREATE TABLE t_status
(
	id			INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
	status	VARCHAR(32)
) AS
	SELECT status FROM t_gregslist WHERE status IS NOT NULL
	GROUP BY status
	ORDER BY status;
SELECT * FROM t_status;

-- This is included by gregslist.sql
-- First, create a temporary table, t_temp_interests, and fill it from
-- t_gregslist.
SELECT "Create interest" AS "COMMENT";

CREATE TABLE t_temp_interests
(
	id				INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
	interests	VARCHAR(128)
) AS
	SELECT interests FROM t_gregslist WHERE interests IS NOT NULL
	GROUP BY interests
	ORDER BY interests;
SELECT * FROM t_temp_interests;


-- --------------------------------------------------------------------------
-- Then, alter the columns on the fly to add separate ones for each interest
-- (Listing the result will show NULLs.)
ALTER TABLE t_temp_interests
    ADD COLUMN interest1 VARCHAR(64),
    ADD COLUMN interest2 VARCHAR(64),
    ADD COLUMN interest3 VARCHAR(64);
SELECT id, interest1, interest2, interest3, interests FROM t_temp_interests;

-- --------------------------------------------------------------------------
-- Now, update the new columns with information from the old, single column
-- "interests", page 290 (solution page 341).
UPDATE t_temp_interests SET interest1 = SUBSTRING_INDEX( interests, ',', 1 );
SELECT interest1, interest2, interest3, interests FROM t_temp_interests;
UPDATE t_temp_interests
	SET interests = TRIM( RIGHT( interests, ( LENGTH( interests ) - LENGTH( interest1 ) - 1 ) ) );
SELECT interest1, interest2, interest3, interests FROM t_temp_interests;

UPDATE t_temp_interests SET interest2 = SUBSTRING_INDEX( interests, ',', 1 );
UPDATE t_temp_interests
	SET interests = TRIM( RIGHT( interests, ( LENGTH( interests ) - LENGTH( interest2 ) - 1 ) ) );
SELECT interest1, interest2, interest3, interests FROM t_temp_interests;

UPDATE t_temp_interests SET interest3 = SUBSTRING_INDEX( interests, ',', 1 );
UPDATE t_temp_interests
	SET interests = TRIM( RIGHT( interests, ( LENGTH( interests ) - LENGTH( interest3 ) - 1 ) ) );
SELECT interest1, interest2, interest3, interests FROM t_temp_interests;

-- --------------------------------------------------------------------------
-- Finally, we've got interests in a separate table (t_temp_interests) with one
-- interest per column. We can select out each interest by column and add it
-- as simply 'interest' to the new table (interests). Don't include null or
-- zero-length columns.
CREATE TABLE t_interests
(
	id         INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
   interest   VARCHAR(64)
) AS
	SELECT interest1 AS interest FROM t_temp_interests
		WHERE interest1 IS NOT NULL AND LENGTH( interest1 ) <> 0
	GROUP BY interest ORDER by interest;

SELECT * FROM t_interests;

INSERT INTO t_interests ( interest )
	SELECT interest2 AS interest FROM t_temp_interests
		WHERE interest2 IS NOT NULL AND LENGTH( interest2 ) <> 0
	GROUP BY interest ORDER by interest;

SELECT * FROM t_interests;

INSERT INTO t_interests ( interest )
	SELECT interest3 AS interest FROM t_temp_interests
		WHERE interest3 IS NOT NULL AND LENGTH( interest3 ) <> 0
	GROUP BY interest ORDER by interest;

SELECT * FROM t_interests;

DROP TABLE t_temp_interests;

# This is built by Java code...
#CREATE TABLE t_contact_interest
#(
#	contact_id	INTEGER,
#	interest_id	INTEGER
#);
#DESC t_contact_interest;


-- This is included by gregslist.sql
-- This is modeled on interest.sql, but it didn't go as smoothly when building
-- the seeking table.
SELECT "Create seeking" AS "COMMENT";

-- DROP TABLE t_seeking;
-- DROP TABLE t_temp_seeking;
CREATE TABLE t_temp_seeking
(
	id			INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
	seeking	VARCHAR(128)
) AS
	SELECT seeking FROM t_gregslist WHERE seeking IS NOT NULL
	GROUP BY seeking
	ORDER BY seeking;
SELECT * FROM t_temp_seeking;

ALTER TABLE t_temp_seeking
    ADD COLUMN seeking1 VARCHAR(64),
    ADD COLUMN seeking2 VARCHAR(64);
SELECT id, seeking1, seeking2, seeking FROM t_temp_seeking;

SELECT "Now build temporary seeking table..." AS "COMMENT";
-- --------------------------------------------------------------------------
-- Now, update the new columns with information from the old, single column
-- "seeking", page 290 (solution page 341).
UPDATE t_temp_seeking SET seeking1 = SUBSTRING_INDEX( seeking, ',', 1 );
SELECT seeking1, seeking2, seeking FROM t_temp_seeking;
UPDATE t_temp_seeking
	SET seeking = TRIM( RIGHT( seeking, ( LENGTH( seeking ) - LENGTH( seeking1 ) - 1 ) ) );
SELECT seeking1, seeking2, seeking FROM t_temp_seeking;

UPDATE t_temp_seeking SET seeking2 = SUBSTRING_INDEX( seeking, ',', 1 );
SELECT seeking1, seeking2, seeking FROM t_temp_seeking;

UPDATE t_temp_seeking
	SET seeking = TRIM( RIGHT( seeking, ( LENGTH( seeking ) - LENGTH( seeking2 ) - 1 ) ) );
SELECT seeking1, seeking2, seeking FROM t_temp_seeking;

SELECT "Now build new seeking table..." AS "COMMENT";

CREATE TABLE t_seeking
(
	id			INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
   seeking	VARCHAR(64)
) AS
	SELECT seeking1 AS seeking FROM t_temp_seeking WHERE seeking1 IS NOT NULL
		AND LENGTH( seeking1 ) <> 0
	GROUP BY seeking1 ORDER by seeking1;

INSERT INTO t_seeking ( seeking )
	SELECT seeking2 AS seeking FROM t_temp_seeking WHERE seeking2 IS NOT NULL
		AND LENGTH( seeking2 ) <> 0
	GROUP BY seeking2 ORDER by seeking2;

SELECT * FROM t_seeking;

-- DROP TABLE t_temp_seeking;

# This is built by Java code...
#CREATE TABLE t_contact_seeking
#(
#	contact_id	INTEGER,
#	seeking_id	INTEGER
#);
#DESC t_contact_seeking;


-- Fix-up is mostly done via Java code:
--  Walk t_gregslist and link each row up to t_profession...
--  Walk t_gregslist and link each row up to t_zip_code...
--  Walk t_gregslist and link each row up to t_status...
--  Walk t_gregslist and set up a row in t_contract_interest to point into a t_gregslist row...
--  Walk contact_interest rows and point them to rows in t_interests...
--  Walk t_gregslist and set up a row in t_contract_seeking to point into a t_gregslist row...
--  Walk contact_seeking rows and point them to rows in t_seeking...
-- This is included by gregslist.sql
-- These are new tables that haven't existed in association with gregslist (my_contacts)
CREATE TABLE t_job_current
(
	id				INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
	title			VARCHAR(64),
	salary		INTEGER,
	start_date	DATE
);
DESC t_job_current;

CREATE TABLE t_job_desired
(
	id				INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
	title			VARCHAR(64),
	salary_low	INTEGER,
	salary_high	INTEGER,
	available	DATE,
	years_exp	INTEGER
);
DESC t_job_desired;

CREATE TABLE t_job_listings
(
	id				INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
	title			VARCHAR(64),
	salary		INTEGER,
	zipcode		VARCHAR(5),
	description	VARCHAR(256)
);
DESC t_job_listings;


SELECT * from t_gregslist;
